version: 2.1

orbs:
  python: circleci/python@0.2.1
  eb: circleci/aws-elastic-beanstalk@1.0.0
  node: circleci/node@4.1.0

############
# Workflows
############
workflows:
  version: 2
  build-deploy:
    branches:
      only:
        - main
    jobs:
      - build_ui
      - build_backend:
          requires:
            - build_ui

##################
# Job Definitions
##################
jobs:
  build_ui:
    docker:
        - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          working_directory: ./ui/app
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          working_directory: ./ui/app
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          working_directory: ./ui/app
          name: install-npm
          command: npm install
      - save_cache:
          working_directory: ./ui/app
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          working_directory: ./ui/app
          name: test
          command: npm test
      - run:
          working_directory: ./ui/app
          name: Build UI
          command: npm run build
  build_backend:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          USERNAME: ubuntu
          DB_NAME: circle_test
          PASSWORD: ''
    steps:
      - checkout
      - restore_cache:
          key: deps2-{{ checksum "backend/requirements.txt" }}
      - run:
          working_directory: ./backend
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps2-{{ checksum "backend/requirements.txt" }}
          paths:
            - 'venv'
      - run:
          working_directory: ./backend
          command: |
            . venv/bin/activate
            pytest
